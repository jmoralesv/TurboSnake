name: Build TurboSnake

on:
  push:
    branches:
      - '**'
    paths:
      - 'src/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ "main" ]

jobs:
  build-turbosnake:
    name: Build TurboSnake with Turbo C++ 3.0 in DOSBox-X
    runs-on: ubuntu-latest

    env:
      SOURCE_FILES: "global.cpp serpiente.cpp pantalla.cpp juego.cpp utilidad.cpp bucle.cpp principal.cpp"
      LOG_FILE: "COMPILE.LOG"
      GAME_NAME: "GAME"

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Install DOSBox-X using Snap
      run: sudo snap install dosbox-x

    - name: Create build folder and copy source files
      run: |
        mkdir -p build
        cp src/*.cpp src/*.h build/
        ls -la build

    - name: Create Turbo C++ response file
      run: |
        : > build/files.lst
        for file in $SOURCE_FILES; do
          echo "$file" >> build/files.lst
        done

    # This step creates the run commands to be executed in DOSBox-X
    # and replaces any variable enclosed in ${} with its value
    # then the commands are stored in the `run_commands` output variable
    - name: Prepare run commands
      id: run
      run: |
        echo "run_commands<<EOF" >> $GITHUB_OUTPUT
        echo "c:" >> $GITHUB_OUTPUT
        echo "cd \\build" >> $GITHUB_OUTPUT
        echo "dir" >> $GITHUB_OUTPUT
        echo "tcc -e${GAME_NAME} @files.lst > ${LOG_FILE}" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Show run commands
      run: echo "${{ steps.run.outputs.run_commands }}"

    - name: Compile using Turbo C++ in DOSBox-X
      uses: joncloud/dos-build-action@main
      timeout-minutes: 2
      with:
        programs: |
          $/turbo-c++/3.00:c:\tc
          build:c:\build
        run: "${{ steps.run.outputs.run_commands }}"
        conf: |
          [dosbox]
          memsize=256

          [cpu]
          cycles=max
          turbo=true

    - name: Show build directory contents
      run: |
        ls -la build
        cat build/${LOG_FILE}

    - name: Artifact path setup
      run: |
        EXENAME="${GAME_NAME^^}.EXE"
        echo "artifactPath=build/$EXENAME" >> $GITHUB_ENV

    - name: Upload EXE
      uses: actions/upload-artifact@v4
      with:
        name: turbosnake-exe
        path: ${{ env.artifactPath }}
        compression-level: 9 # maximum compression
